version: 2.1

executors:
  clang-executor:
    docker:
      - image: ubuntu:latest
    resource_class: small
    environment:
      CC: clang
      CXX: clang++

jobs:
  clang-format-check:
    executor: clang-executor
    steps:
      - checkout
      - run:
          name: Install clang-format
          command: |
            export DEBIAN_FRONTEND=noninteractive
            apt update && apt install -y clang-format
      - run:
          name: Run clang-format
          command: |
            find . -name "*.c" -o -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror

  clang-tidy-check:
    executor: clang-executor
    steps:
      - checkout
      - run:
          name: Install clang-tidy
          command: |
            export DEBIAN_FRONTEND=noninteractive
            apt update && apt install -y clang-tidy
      - run:
          name: Run clang-tidy
          command: |
            for file in $(find . -name "*.c" -o -name "*.cpp" -o -name "*.h"); do
              clang-tidy $file -- -std=c++17 || exit 1
            done

  build-and-compile:
    executor: clang-executor
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            export DEBIAN_FRONTEND=noninteractive
            apt update && apt install -y build-essential cmake clang
      - run:
          name: Compile Components
          command: |
            mkdir -p build
            clang++ -std=c++17 -Wall -Werror -c src/calculator.cpp -o build/calculator.o
            clang++ -std=c++17 -Wall -Werror -c src/logger.cpp -o build/logger.o
            clang++ -std=c++17 -Wall -Werror -c src/notifier.cpp -o build/notifier.o
      - run:
          name: Verify Build
          command: ls -l build/

workflows:
  version: 2
  clang-checks:
    jobs:
      - clang-format-check
      - clang-tidy-check
      - build-and-compile

